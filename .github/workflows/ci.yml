name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: auth_backend_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.0
          bundler-cache: true

      - name: Set up environment
        run: |
          cp .env.example .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_USERNAME=postgres" >> .env
          echo "DB_PASSWORD=password" >> .env
          echo "DEVISE_JWT_SECRET_KEY=test-secret-key" >> .env

      - name: Create database
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
        env:
          RAILS_ENV: test
          DB_HOST: localhost
          DB_USERNAME: postgres
          DB_PASSWORD: password

      - name: Run tests
        run: bundle exec rspec
        env:
          RAILS_ENV: test
          DB_HOST: localhost
          DB_USERNAME: postgres
          DB_PASSWORD: password
          DEVISE_JWT_SECRET_KEY: test-secret-key

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
